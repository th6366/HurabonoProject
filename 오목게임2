/* 안녕하세요 카로시안입니다..!!
   이번에는 C언어로 오목한번 만들어봤습니다 ㅋ
   실은 학교에서 한거지만요 ;ㅁ;
   처음에 학교에서 만들때에는 약 2시간반? 3시간 정도 걸렸습니다.
   두번째 만드는거라 그런지 한시간~한시간반정도면 만들어 지네요 ~_~
   근데 설명을 쓰는게 코딩짜는시간만큼 지나가네요;;;
   아무튼 궁금한거 있으시믄 언제든지 말해주세요 ~_~ */

//--------전처리기 부분-----------
#include <stdio.h>											// 입출력
#include <Windows.h>										// 커서 이동
#include <conio.h>											// getch함수 (키를 하나 받는 함수)
//-------------------------------

//---------함수 정의 및 전역변수-----------
void gotoxy(int x, int y);									// 커서 이동함수
void gamecontrol();											// 게임 컨트롤 함수 (게임이 작동하는 순서 정의)
void Draw_BadukBoard();										// 바둑판 그리기 (오목은 바둑판에서 많이하잖아요)
void Key_Down(int Board[][20], char key,int *x, int *y);	// 키가 눌렸을 때 처리하는 함수 (방향키 및 스페이스바 처리)
void Erase_Stone(int x, int y);								// 그려진 바둑돌을 지우는 함수 (이동하기 위해선 이미 출력된걸 지워야 함)
void Draw_Stone();											// 바둑돌 출력 함수 (이동된 이후에 바둑돌 출력해야 함)
void Put_Stone(int Board[][20],int x, int y);				// 바둑돌 저장 함수 (유저가 놓겠다고 한 자리에 바둑돌을 놓아야 하므로)
void Draw_Put_Stone(int Board[][20]);						// 놓여진 바둑돌 출력함수 (유저가 놓은 자리에 그 바둑돌을 출력)
int Win_Check(int Board[][20]);								// 승리 체크 함수
int check = 1;												// 무슨 바둑돌이 그려져야 하는지 체크하는 변수(1 - 백돌, 2 - 흑돌)													
//---------------------------------------------

//------------ 메인 함수 -----------------
int main (void){
	gamecontrol();											// 딱히 설명할 것은 없지만... 게임 컨트롤 함수를 호출하고
	gotoxy(0,23);											// 그 함수가 끝났으면 0,23으로 커서를 보내어 종료/
	return 0;												// 디버깅하지 않고 시작을 했을 때 마지막에 나오는 문구가 자꾸 바둑판을 지워서;;
}
//------------------------------------------

//-------------게임 컨트롤 함수-----------------
void gamecontrol(){
	int Baduk_Board[20][20] = {0};							// 바둑판 배열, 20x20의 2차행렬을 만들고 전부 0으로 초기화(0이면 아무것도 없는거, 1이면 백돌, 2면 흑돌)
	int x = 0,y= 0;											// x좌표와 y좌표
	char Key;												// 키가 입력되었을 때 그 ASCII 코드를 받을 변수

	Draw_BadukBoard();										// 바둑판 그리는 함수 호출
	gotoxy(x,y);											// 우선 0,0으로 커서를 옮김(위에서 x와 y를 0으로 초기화 했음)
	Draw_Stone();											// 돌 그리는 함수. 맨 처음에 그려졌으니 당연 백돌. (전역변수에서 1로 초기화했습니다.)
	do{														// do while문. 일단 한번 수행하고 조건에 맞으면 계속 루프
		Key = getch();										// 키 하나를 입력받아 그것의 ASCII 코드를 Key 변수에 저장
		Erase_Stone(x, y);									// 그려진 바둑돌을 지우는 함수 호출 - 키 입력을 받고 완전히 지워버리면 바둑판 또 그려야 하는데, 그런식으로 만들어버리면 화면이 반짝반짝..
		Key_Down(Baduk_Board,Key,&x,&y);					// 키가 눌려졌을 때 처리하는 함수 호출
		Draw_Put_Stone(Baduk_Board);						// 놓여진 돌을 그리는 함수 호출
		if(Win_Check(Baduk_Board))							// 이겼나 체크함. (누군가가 이기면 1이 반환되는데 그건 C에서 true로 인식하여 if문이 돌아갑니다.)
			return;											// 누군가가 이겼으면 게임 컨트롤 함수 종료 == 게임 종료
		gotoxy(x,y);										// 커서 이동( Key_Down 함수에서 변경된 자리로 이동, 왜냐하면 Key_Down 함수에서 포인터로 보내서 옮겼으니까. )
		Draw_Stone();										// 돌 출력 함수, 커서를 이동시켰으면 그다음은 돌 출력
	}while(Key != 27);										// Key값이 27이 아닐경우 계속함 (ASCII코드 27번은 ESC키)
}
//--------------------------------------------

//---------돌 지우는 함수---------------------
void Erase_Stone(int x ,int y){								// x,y의 좌표값을 매개변수로 합니다. (현재의 위치를 알아야 지우죠)
	gotoxy(x,y);											// 현재 돌이 위치한 곳으로 이동 (옮기기 전입니다. 게임 컨트롤 함수 순서 잘 보세요)
	if (x == 0 && y == 0)									// 그곳이 만약 0,0 (왼쪽 위 모서리)인 경우
		printf("┌");						
	else if (x == 36 && y == 0)								// 그곳이 만약 36,0 (오른쪽 위 모서리)인 경우
		printf("┐");
	else if (x == 0 && y == 18)								// 그곳이 만약 0,18 (왼쪽 아래 모서리)인 경우
		printf("└");
	else if (x == 36 && y == 18)							// 그곳이 만약 36,18 (오른쪽 아래 모서리)인 경우
		printf("┘");
	else if (x == 0)										// 그곳이 만약 0,* (왼쪽줄)인 경우						// *는 모든 수를 의미합니다.
		printf("├");	
	else if (y == 0)										// 그곳이 만약 *,0 (윗줄)인 경우
		printf("┬");	
	else if (x == 36)										// 그곳이 만약 36,* (오른쪽줄)인 경우
		printf("┤");	
	else if (y == 18)										// 그곳이 만약 *,18 (아랫줄)인 경우
		printf("┴");	
	else													// 그 외의 경우
		printf("┼");	
}															// if elseif문을 쓰실 때에는 범위가 좁은것부터 해야 합니다.
															// 범위가 넓은거부터 하시게 되면 그보다 범위가 좁은곳에 있는것은 하지 않습니다...
//----------------------------------------------

//-------------돌 그리는 함수--------------------
void Draw_Stone(){
	if (check == 1)											// 전역변수 check 가 1이면 백돌 출력(콘솔창에서 백돌입니다)
		printf("●");		
	else		
		printf("○");										// 전역변수 check 가 2이면 흑돌 출력
}
//-----------------------------------------------

//----------키가 눌렸을 때 처리하는 함수-------------
void Key_Down(int Board[][20], char key, int *x , int *y){	// Board는 스페으바 눌렸을 때 처리하기 위해서, key는 무슨키값을 받았는지 알아야 해서, x,y좌표값은 키를 눌렷을 때 위치를 바꿔줘야 하니까 매개변수로 받습니다.
	switch(key){
	case 72:												// key값의 ASCII코드가 72번일 때 (위쪽 방향키)
		if (*y-1 < 0)										// y-1 했을 때 0 미만이면 처리 안함
			break;
		else												// 0미만이 아닐경우에는 y값을 1 감소
			*y -= 1;
		break;
	case 80:												// key값의 ASCII코드가 80번일 때 (아래쪽 방향키)
		if (*y+1 > 18)										// y+1 했을 때 18을 초과하면 처리 안함
			break;
		else												// 18을 초과하지 않았을 경우 y값 1 증가
			*y += 1;
		break;
	case 75:												// key값의 ASCII코드가 75번일 때 (왼쪽 방향키)
		if (*x-2 < 0)										// x-2 했을 때 0 미만이면 경우 처리 안함
			break;
		else												// 0 미만이 아닐경우에는 x값 2 감수 (콘솔창에서는 y값 1이 x값 2와 유사합니다)
			*x -= 2;
		break;
	case 77:												// key값의 ASCII코드가 77번일 때 (오른쪽 방향키)
		if(*x+2>36)											// x+2했을 때 36을 초과하면 처리 안함
			break;
		else												// 36을 초과하지 않았을 경우 x값 2 증가
			*x += 2;
		break;
	case 32:												// key값의 ASCII코드가 32번일 때 (스페이스바)
			Put_Stone(Board,*x,*y);							// 돌 놓는 함수 호출, Board와 현 좌표를 매개변수로 보낸다.
		break;
	default:												//그 외의 경우, 처리 안함
		break;
	}
}
//-------------------------------------------------

//-----------------돌 놓는 함수--------------------
void Put_Stone(int Board[][20],int x, int y){
	if (Board[y][x/2] == 0){								// 놓으려는 부분에 아무것도 놓여있지 않은 경우
		if (check == 1){									// 전역변수 check가 1일 경우
			Board[y][x/2] = 1;								// Board[y][x/2] 에 1을 넣고			// 2차 배열은 [세로][가로]입니다. (3차배열은 [높이][세로][가로] 겠죠?)
			check = 2;}										// 전역변수 check값 2로 변환

		else{												// 1이 아닐경우						// 왜 elseif문을 쓰지 않았느냐!! 1아니면 2밖에 나올일이 없기 때문입니다.
			Board[y][x/2] = 2;								// Board[y][x2]에 2를 넣고
			check = 1;}}									// 전역변수 check값 1로 변환
}
//-------------------------------------------------

//-------------놓여진 돌 출력함수----------------------
void Draw_Put_Stone(int Board[][20]){
	int i;														// ... 알수없는 오류로 인해서 그냥 전역변수 만들어버렸어요.
	int j;	
	for (i = 0 ; i < 20 ; i++){								// 이중for문을 사용하여 전체적으로 검사를 합니다.
		for (j = 0 ; j < 20 ; j++){	
			if (Board[j][i] == 1){							// 그중 Board에서 1이 나오면			// 여기서는 검사를 세로로 하네요...
				gotoxy(i*2,j);								// 커서를 i*2,j 에 보내서
				printf("●");}								// 백돌 출력

			else if (Board[j][i] == 2){						// 그중 Board에서 2가 나오면
				gotoxy(i*2,j);								// 커서를 i*2,j 에 보내서
				printf("○");}								// 흑돌 출력							// 여기서는 왜 if else가 아닌 if elseif냐!! 0도 있기 때문입니다.
		}
	}
}
//----------------------------------------------------

//-------------승리 체크 함수-------------------------
int Win_Check(int Board[][20]){
	int i;														// ... 알수없는 오류로 인해서 그냥 전역변수 만들어버렸어요.
	int j;	
	for ( i = 2 ; i < 18 ; i++){							// 가로 또는 세로를 검사하기 위한 for문입니다.
		for ( j = 0 ; j < 20 ; j++){						// 한쪽으로는 처음부터 끝까지, 한쪽으로는 조금 검사를 덜합니다. 한쪽방향으로 여러개를 동시에 검사하기 때문입니다.
			if (Board[j][i-2] == 1 && Board[j][i-1] == 1 && Board[j][i] == 1 && Board[j][i+1] == 1 && Board[j][i+2] == 1){	// 이게 가로방향으로 검사하는 겁니다.
				gotoxy(0,22);
				printf("*** 백돌 승리 ***");
				getch();
				return 1;}
			else if(Board[j][i-2] == 2 && Board[j][i-1] == 2 && Board[j][i] == 2 && Board[j][i+1] == 2 && Board[j][i+2] == 2){
				gotoxy(0,22);
				printf("*** 흑돌 승리 ***");
				getch();
				return 1;}

			else if (Board[i-2][j] == 1 && Board[i-1][j] == 1 && Board[i][j] == 1 && Board[i+1][j] == 1 && Board[i+2][j] == 1){	// 이건 세로방향으로 검사하는 겁니다. 행렬의 앞과 뒤를 바꾸면 됩니다.
				gotoxy(0,22);
				printf("*** 백돌 승리 ***");
				getch();
				return 1;}
			else if (Board[i-2][j] == 2 && Board[i-1][j] == 2 && Board[i][j] == 2 && Board[i+1][j] == 2 && Board[i+2][j] == 2){
				gotoxy(0,22);
				printf("*** 흑돌 승리 ***");
				getch();
				return 1;}
		}
	}

	for ( i = 2; i < 18 ; i++){						// 이 for문은 대각선 방향을 검사하기 위한 for문입니다.
		for ( j = 2; j < 18 ; j++){					// 가로와 세로 둘 다 동시에 검사를 해야하기 때문에 검사범위가 조금 좁습니다.
			if (Board[j-2][i-2] == 1 && Board[j-1][i-1] == 1 && Board[j][i] == 1 && Board[j+1][i+1] == 1 && Board[j+2][i+2] == 1){ // 이것과 바로 밑에 있는 elseif문이 왼쪽 위에서 오른쪽 밑으로 내려가는 대각선을 검사하는 겁니다.
				gotoxy(0,22);
				printf("*** 백돌 승리 ***");
				getch();
				return 1;}
			else if (Board[j-2][i-2] == 2 && Board[j-1][i-1] == 2 && Board[j][i] == 2 && Board[j+1][i+1] == 2 && Board[j+2][i+2] == 2){
				gotoxy(0,22);
				printf("*** 흑돌 승리 ***");
				getch();
				return 1;}

			else if (Board[j+2][i-2] == 1 && Board[j+1][i-1] == 1 && Board[j][i] == 1 && Board[j-1][i+1] == 1 && Board[j-2][i+2] == 1){ // 이 if문과 바로 밑의 elseif문은 왼쪽 아래에서 오른쪽 위로 올라가는 대각선을 검사하는 겁니다.
				gotoxy(0,22);
				printf("*** 백돌 승리 ***");
				getch();
				return 1;}
			else if (Board[j+2][i-2] == 2 && Board[j+1][i-1] == 2 && Board[j][i] == 2 && Board[j-1][i+1] == 2 && Board[j-2][i+2] == 2){
				gotoxy(0,22);
				printf("*** 흑돌 승리 ***");
				getch();
				return 1;}
		}
	} // 만약 조건이 갖춰졌다면 true를 반환하고, 그렇지 않다면 false를 반환합니다.
	return 0;
}
//---------------------------------------------

// ------ 바둑판을 그리는 함수------------------------
void Draw_BadukBoard(){
	int i;														// ... 알수없는 오류로 인해서 그냥 전역변수 만들어버렸어요.
	int j;	
	//int I;												// 두번쨰 중간줄 그리는 for문에서 i가 바로 17로 넘어가는거 떄문에 다른 변수를 만들었습니다.
	printf("┌");										// 먼저 윗부분을 그립니다. ┌┬...┬┐
	for (i = 0 ; i< 17 ; i++)
		printf("┬");
	printf("┐\n");
	
	for(i = 0 ; i < 17 ; i++){							// 그 후 중간부분을 그립니다. ├┼...┼┤
		printf("├");									// 2중for문을 쓴 이유 - 이것만 여러줄입니다.
		for (j = 0 ; j < 17 ; j++)
			printf("┼");
		printf("┤\n");
	}

	printf("└");									// 마지막으로 아랫부분을 그립니다. └┴...┴┘
	for (i = 0 ; i < 17 ; i++)
		printf("┴");
	printf("┘");
}
//----------------------------------------------------

//----------커서 이동함수----------------------
void gotoxy(int x, int y){							// 솔직이 이 함수는 저도 어떻게 작동하는지 잘 모르겠습니다.
	COORD Pos;										// 걍 외우고 쓰시거나 어디에 적어두고 쓰세요...
	Pos.X = x;										// 확실한건 Pos.X가 x좌표고 Pos.Y가 y좌표인데 저곳으로 옮긴다는 소리입니다.
	Pos.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),Pos);
}
//------------------------------------------------
