#include <stdio.h>#include <stdlib.h>#include <time.h>void game();//게임함수 원형 선언int genealogical(card0, card1);//족보함수 원형 선언void help();//도움말 함수 원형 선언void genealogical_print(result_card);//패 결과출력함수 원형 선언void betting_result(user_card_result, com1_card_result, com2_card_result);//승패유무결정함수 원형 선언void betting_result_win(betting_money);//경기결과 승리시 출력함수 원형 선언void betting_result_lose(betting_money);//경기결과 패배시 출력함수 원형 선언void betting_result_repeat();//경기결과 재경기시 출력함수 원형 선언int cash = 0;//게임 판돈int game_count = 0;//게임횟수int win = 0;//게임 승리횟수 int lose = 0;//게임 패배횟수 double theory = 0;//게임승률int main() { int menu;//메뉴 선택 변수 while (1) {  system("cls");  printf("*************************\n");  printf("*\t섯다 게임\t*\n");  printf("*************************\n\n\n");  printf("1. 게임시작\n\n");  printf("2. 도 움 말\n\n");  printf("3. 게임종료\n\n\n");  printf("메뉴를 선택하세요 : ");  fflush(stdin);  scanf("%d", &menu);  switch (menu) {  case 1:   game();//게임시작   break;  case 2:   help();//도움말   break;  case 3:   system("cls");   printf("프로그램이 종료됩니다.\n\n");   return 0;//프로그램 종료   break;  } }}void game() { //게임함수 int user_card[2] = { 0,0 }; //유저 카드 입력을 위한 배열 int com1_card[2] = { 0,0 }; //컴퓨터 카드 입력을 위한 배열 int com2_card[2] = { 0,0 }; int user_card_result;//난수로 입력된 숫자를 카드결과값으로 받는 변수 int com1_card_result; int com2_card_result; int question;//배팅유무 결정변수 int menu;//게임진행결정변수 srand((unsigned int)time(NULL)); system("cls"); if (game_count == 0) {  printf("\n\n게임시작 자금으로 게임머니 100만원이 지급됩니다.\n\n");  printf("게임을 계속 진행하시려면 ENTER를 눌러주세요.\n\n");  cash = 1000000;  fflush(stdin);  getchar(); } if (cash <= 0) {  printf("사용자의 재정이 파산생태이므로 게임을 더이상 진행하실 수 없습니다.\n\n");  printf("전 화면으로 돌아가시려면 ENTER를 눌러주세요.\n\n");  fflush(stdin);  getchar();  return 0; } while (1) {  game_count++;  system("cls");  user_card[0] = rand() % 20 + 1;//카드패 숫자배열에 난수삽입  com1_card[0] = rand() % 20 + 1;  com2_card[0] = rand() % 20 + 1;  while (1) {   if (user_card[0] != user_card[1] != com1_card[0] != com1_card[1] != com2_card[0] != com2_card[1]) {//동일패 방지를 위한 예외처리    user_card[1] = rand() % 20 + 1;    com1_card[1] = rand() % 20 + 1;    com2_card[1] = rand() % 20 + 1;   }   else    break;  }  user_card_result = genealogical(user_card[0], user_card[1]);//난수에 의한 값을 족보결과로 리턴하는 함수호출  com1_card_result = genealogical(com1_card[0], com1_card[1]);  com2_card_result = genealogical(com2_card[0], com2_card[1]);  printf("당신의 ");  genealogical_print(user_card_result);//패의 결과를 출력하는 함수호출  printf("배팅하시겠습니까?\n\n");  printf("1. 배팅\n\n");  printf("2. 다이\n\n");  printf("메뉴를 선택하세요 : ");  scanf("%d", &question);  switch (question) {  case 1:   betting_result(user_card_result, com1_card_result, com2_card_result);   break;  case 2:   while (1) {    system("cls");    printf("다이를 선택함에따라 기본 참가금(5000원)만큼 차감됩니다.\n\n");    cash -= 5000;    printf("1. 게임 계속 진행\n\n");    printf("2.메뉴로 복귀\n\n");    printf("메뉴를 선택하세요 : ");    fflush(stdin);    scanf("%d", &menu);    if (menu == 1)     break;    else if (menu == 2)     return 0;   }  default:   printf("먼가 잘못 된것 같습니다 -_-");  } }}int genealogical(card0, card1) { //난수에 의한 값을 족보결과로 리턴하는 함수 if (card0 == 3 && card1 == 8 || card0 == 8 && card1 == 3)//38광땡  return 1; else if (card0 == 1 && card1 == 8 || card0 == 8 && card1 == 1)//18광땡  return 2; else if (card0 == 1 && card1 == 3 || card0 == 3 && card1 == 1)//13광땡  return 3; else if (card0 == 10 && card1 == 20 || card0 == 20 && card1 == 10)//장땡  return 4; else if (card0 == 9 && card1 == 19 || card0 == 19 && card1 == 9)//9땡  return 5; else if (card0 == 8 && card1 == 18 || card0 == 18 && card1 == 8)//8땡  return 6; else if (card0 == 7 && card1 == 17 || card0 == 17 && card1 == 7)//7땡  return 7; else if (card0 == 6 && card1 == 16 || card0 == 16 && card1 == 6)//6땡  return 8; else if (card0 == 5 && card1 == 15 || card0 == 15 && card1 == 5)//5땡  return 9; else if (card0 == 4 && card1 == 14 || card0 == 14 && card1 == 4)//4땡  return 10; else if (card0 == 3 && card1 == 13 || card0 == 13 && card1 == 3)//3땡  return 11; else if (card0 == 2 && card1 == 12 || card0 == 12 && card1 == 2)//2땡  return 12; else if (card0 == 1 && card1 == 11 || card0 == 11 && card1 == 1)//1땡  return 13; else if (card0 == 1 && card1 == 2 || card0 == 1 && card1 == 12 || card0 == 11 && card1 == 2 || card0 == 11 && card1 == 12 || card0 == 2 && card1 == 1 || card0 == 12 && card1 == 1 || card0 == 2 && card1 == 11 || card0 == 12 && card1 == 11)//알리  return 14; else if (card0 == 1 && card1 == 4 || card0 == 1 && card1 == 14 || card0 == 11 && card1 == 4 || card0 == 11 && card1 == 14 || card0 == 4 && card1 == 1 || card0 == 14 && card1 == 1 || card0 == 4 && card1 == 11 || card0 == 14 && card1 == 11)//독사  return 15; else if (card0 == 1 && card1 == 9 || card0 == 1 && card1 == 19 || card0 == 11 && card1 == 9 || card0 == 11 && card1 == 19 || card0 == 9 && card1 == 1 || card0 == 19 && card1 == 1 || card0 == 9 && card1 == 11 || card0 == 19 && card1 == 11)//구삥  return 16; else if (card0 == 1 && card1 == 10 || card0 == 1 && card1 == 20 || card0 == 11 && card1 == 10 || card0 == 11 && card1 == 20 || card0 == 10 && card1 == 1 || card0 == 20 && card1 == 1 || card0 == 10 && card1 == 11 || card0 == 20 && card1 == 11)//장삥  return 17; else if (card0 == 4 && card1 == 10 || card0 == 4 && card1 == 20 || card0 == 14 && card1 == 10 || card0 == 14 && card1 == 20 || card0 == 10 && card1 == 4 || card0 == 20 && card1 == 4 || card0 == 10 && card1 == 14 || card0 == 20 && card1 == 14)//장사  return 18; else if (card0 == 4 && card1 == 6 || card0 == 4 && card1 == 16 || card0 == 14 && card1 == 6 || card0 == 14 && card1 == 16 || card0 == 6 && card1 == 4 || card0 == 16 && card1 == 4 || card0 == 6 && card1 == 14 || card0 == 16 && card1 == 14)//세륙  return 19; else if (card0 == 3 && card1 == 7 || card0 == 3 && card1 == 17 || card0 == 13 && card1 == 7 || card0 == 13 && card1 == 17 || card0 == 7 && card1 == 3 || card0 == 17 && card1 == 3 || card0 == 7 && card1 == 13 || card0 == 17 && card1 == 13)//땡잡이  return -1; else if (card0 == 4 && card1 == 19 || card0 == 14 && card1 == 9 || card0 == 14 && card1 == 19 || card0 == 19 && card1 == 4 || card0 == 9 && card1 == 14 || card0 == 19 && card1 == 14)//구사  return -2; else if (card0 == 4 && card1 == 9 || card0 == 9 && card1 == 4)//멍텅구리구사  return -3; else {  if (card0 + card1 == 9 || card0 + card1 == 19 || card0 + card1 == 29 || card0 + card1 == 39)//갑오   return 20;  else if (card0 + card1 == 8 || card0 + card1 == 18 || card0 + card1 == 28 || card0 + card1 == 38)//8끗   return 21;  else if (card0 + card1 == 7 || card0 + card1 == 17 || card0 + card1 == 27 || card0 + card1 == 37)//7끗   return 22;  else if (card0 + card1 == 6 || card0 + card1 == 16 || card0 + card1 == 26 || card0 + card1 == 36)//6끗   return 23;  else if (card0 + card1 == 5 || card0 + card1 == 15 || card0 + card1 == 25 || card0 + card1 == 35)//5끗   return 24;  else if (card0 + card1 == 4 || card0 + card1 == 14 || card0 + card1 == 24 || card0 + card1 == 34)//4끗   return 25;  else if (card0 + card1 == 3 || card0 + card1 == 13 || card0 + card1 == 23 || card0 + card1 == 33)//3끗   return 26;  else if (card0 + card1 == 12 || card0 + card1 == 22 || card0 + card1 == 32)//2끗   return 27;  else if (card0 + card1 == 11 || card0 + card1 == 21 || card0 + card1 == 31)//1끗   return 28;  else if (card0 + card1 == 10 || card0 + card1 == 20 || card0 + card1 == 30)//망통   return 29; }}void betting_result(user_card_result, com1_card_result, com2_card_result) { int betting_money;//배팅금액변수 while (1) {  system("cls");  printf("당신의 ");  genealogical_print(user_card_result);  printf("당신이 현재 보유하고 있는 돈은 총 %d원입니다.\n\n", cash);  printf("얼마를 배팅하시겠습니까?\n\n");  printf("배팅금액 : ");  scanf("%d", &betting_money);  if (betting_money>0 && betting_money <= cash)   break;  else {   printf("잘못된 범위의 값을 입력하셨습니다.");   printf("계속 진행하시려면 ENTER를 눌러주세요.\n\n");   fflush(stdin);   getchar();  } } system("cls"); printf("당신의 "); genealogical_print(user_card_result); printf("com1의 "); genealogical_print(com1_card_result); printf("com2의 "); genealogical_print(com2_card_result); if (user_card_result>0 && com1_card_result>0 && com2_card_result>0 && user_card_result<com1_card_result && user_card_result<com2_card_result) {//족보서열승리시  betting_result_win(betting_money);  return 0; } else if (user_card_result>0 && com1_card_result>0 && com2_card_result>0 && user_card_result>com1_card_result) {//족보서열패배시  betting_result_lose(betting_money);  return 0; } else if (user_card_result>0 && com1_card_result>0 && com2_card_result>0 && user_card_result>com2_card_result) {  betting_result_lose(betting_money);  return 0; } else if (user_card_result>0 && com1_card_result>0 && com2_card_result>0 && user_card_result<com1_card_result && user_card_result == com2_card_result) {//족보서열동일시 재경기  betting_result_repeat();  return 0; } else if (user_card_result>0 && com1_card_result>0 && com2_card_result>0 && user_card_result == com1_card_result && user_card_result<com2_card_result) {  betting_result_repeat();  return 0; } else if (user_card_result>0 && com1_card_result>0 && com2_card_result>0 && user_card_result == com1_card_result && user_card_result == com2_card_result) {  betting_result_repeat();  return 0; } else if (user_card_result == -1 && com1_card_result>3 && com1_card_result<14) {//유저가 땡잡이이고 컴퓨터가 땡패일시 승리  betting_result_win(betting_money);  return 0; } else if (user_card_result == -1 && com2_card_result>3 && com2_card_result<14) {  betting_result_win(betting_money);  return 0; } else if (user_card_result == -1 && com1_card_result>0 && com1_card_result<4) {//유저가 땡잡이이고 컴퓨터가 땡광일시 패배  betting_result_lose(betting_money);  return 0; } else if (user_card_result == -1 && com2_card_result>0 && com2_card_result<4) {  betting_result_lose(betting_money);  return 0; } else if (user_card_result == -1 && com1_card_result>13) {//유저가 땡잡이이고 컴퓨터가 일반족보일시 패배  betting_result_lose(betting_money);  return 0; } else if (user_card_result == -1 && com2_card_result>13) {  betting_result_lose(betting_money);  return 0; } else if (user_card_result>3 && user_card_result<14 && com1_card_result == -1) {//유저가 땡패이고 컴퓨터가 땡잡이일시 패배  betting_result_lose(betting_money);  return 0; } else if (user_card_result>3 && user_card_result<14 && com2_card_result == -1) {  betting_result_lose(betting_money);  return 0; } else if (user_card_result == -2 && com1_card_result>13 && com2_card_result>13) {//유저와 컴퓨터 중 한사람이 구사패이고 나머지 알리이하 패일시 재경기  betting_result_repeat();  return 0; } else if (user_card_result>13 && com1_card_result == -2 && com2_card_result>13) {  betting_result_repeat();  return 0; } else if (user_card_result>13 && com1_card_result>13 && com2_card_result == -2) {  betting_result_repeat();  return 0; } else if (user_card_result == -2 && com1_card_result<0 && com2_card_result>13) {  betting_result_repeat();  return 0; } else if (user_card_result == -2 && com1_card_result>13 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result == -2 && com2_card_result>13) {  betting_result_repeat();  return 0; } else if (user_card_result>13 && com1_card_result == -2 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result>13 && com1_card_result<0 && com2_card_result == -2) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result>13 && com2_card_result == -2) {  betting_result_repeat();  return 0; } else if (user_card_result == -2 && com1_card_result<0 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result == -2 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result<0 && com2_card_result == -2) {  betting_result_repeat();  return 0; } else if (user_card_result == -2 && com1_card_result>0 && com1_card_result<4) {//유저가 구사이고 컴퓨터가 땡패 이상의 족보일 때 패배  betting_result_lose(betting_money);  return 0; } else if (user_card_result == -2 && com2_card_result>0 && com2_card_result<4) {  betting_result_lose(betting_money);  return 0; } else if (user_card_result == -3 && com1_card_result>2 && com2_card_result>2) {//유저와 컴퓨터 중 멍텅구리구사이고 나머지가 38광땡 이하 패일 때 재경기  betting_result_repeat();  return 0; } else if (user_card_result>2 && com1_card_result == -3 && com2_card_result>2) {  betting_result_repeat();  return 0; } else if (user_card_result>2 && com1_card_result>2 && com2_card_result == -3) {  betting_result_repeat();  return 0; } else if (user_card_result == -3 && com1_card_result<0 && com2_card_result>2) {  betting_result_repeat();  return 0; } else if (user_card_result == -3 && com1_card_result>2 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result == -3 && com2_card_result>2) {  betting_result_repeat();  return 0; } else if (user_card_result>2 && com1_card_result == -3 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result>2 && com2_card_result == -3) {  betting_result_repeat();  return 0; } else if (user_card_result>2 && com1_card_result<0 && com2_card_result == -3) {  betting_result_repeat();  return 0; } else if (user_card_result == -3 && com1_card_result<0 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result == -3 && com2_card_result<0) {  betting_result_repeat();  return 0; } else if (user_card_result<0 && com1_card_result<0 && com2_card_result == -3) {  betting_result_repeat();  return 0; } else if (user_card_result == -3 && com1_card_result == 1) {//유저가 멍텅구리구사일 때 컴퓨터가 38광땡이면 패  betting_result_repeat();  return 0; } else if (user_card_result == -3 && com2_card_result == 1) {  betting_result_repeat();  return 0; } else {  printf("잘못된 범위의 수가 입력된 것 같습니다.");  printf("계속 진행하시려면 ENTER를 눌러주세요.\n\n");  fflush(stdin);  getchar(); }}void betting_result_win(betting_money) { printf("이번 판에서 승리하셨습니다.\n\n"); printf("판돈 %d원를 가져가게 됩니다.\n\n", betting_money * 2); cash += betting_money * 2; win++; theory = (double)win / (win + lose); printf("현재 전적은 %d전 %d승 %d패 승률 %lf%% 입니다.\n\n", game_count, win, lose, theory * 100); printf("게임을 계속 진행하시려면 ENTER를 눌러주세요.\n\n"); fflush(stdin); getchar();}void betting_result_lose(betting_money) { printf("이번 판에서 패배하셨습니다.\n\n"); printf("기본 판돈(5000원)과 배팅금 %d원를 잃게 됩니다.\n\n", betting_money * 100); cash -= betting_money + 5000; lose++; theory = (double)win / (win + lose); printf("현재 전적은 %d전 %d승 %d패 승률 %lf%% 입니다.\n\n", game_count, win, lose, theory); printf("게임을 계속 진행하시려면 ENTER를 눌러주세요.\n\n"); fflush(stdin); getchar();}void betting_result_repeat() { game_count--; printf("재경기패 또는 동일족보 패에 의해 재경기됩니다.\n\n"); printf("게임을 계속 진행하시려면 ENTER를 눌러주세요.\n\n"); fflush(stdin); getchar();}void genealogical_print(result_card) {//패의 결과를 출력하는 함수 switch (result_card) { case 1:  printf("카드는 38광땡입니다.\n\n");  break; case 2:  printf("카드는 18광땡입니다.\n\n");  break; case 3:  printf("카드는 13광땡입니다.\n\n");  break; case 4:  printf("카드는 장땡입니다.\n\n");  break; case 5:  printf("카드는 9땡입니다.\n\n");  break; case 6:  printf("카드는 8땡입니다.\n\n");  break; case 7:  printf("카드는 7땡입니다.\n\n");  break; case 8:  printf("카드는 6땡입니다.\n\n");  break; case 9:  printf("카드는 5땡입니다.\n\n");  break; case 10:  printf("카드는 4땡입니다.\n\n");  break; case 11:  printf("카드는 3땡입니다.\n\n");  break; case 12:  printf("카드는 2땡입니다.\n\n");  break; case 13:  printf("카드는 1땡입니다.\n\n");  break; case 14:  printf("카드는 독사입니다.\n\n");  break; case 15:  printf("카드는 구삥입니다.\n\n");  break; case 16:  printf("카드는 장삥입니다.\n\n");  break; case 17:  printf("카드는 장사입니다.\n\n");  break; case 18:  printf("카드는 세륙입니다.\n\n");  break; case 19:  printf("카드는 갑오입니다.\n\n");  break; case 20:  printf("카드는 9끗입니다.\n\n");  break; case 21:  printf("카드는 8끗입니다.\n\n");  break; case 22:  printf("카드는 7끗입니다.\n\n");  break; case 23:  printf("카드는 6끗입니다.\n\n");  break; case 24:  printf("카드는 5끗입니다.\n\n");  break; case 25:  printf("카드는 4끗입니다.\n\n");  break; case 26:  printf("카드는 3끗입니다.\n\n");  break; case 27:  printf("카드는 2끗입니다.\n\n");  break; case 28:  printf("카드는 1끗입니다.\n\n");  break; case 29:  printf("카드는 망통입니다.\n\n");  break; case -1:  printf("카드는 땡잡이입니다.\n\n");  break; case -2:  printf("카드는 구사입니다.\n\n");  break; case -3:  printf("카드는 멍텅구리입니다.\n\n");  break; default:  printf("잘못된 난수가 입력된것 같습니다."); }}void help() { //도움말 함수 system("cls"); printf("본 프로그램은 C언어로 구현된 섯다게임입니다.\n\n"); printf("기본적 룰은 기존의 섯다 동일하며, 암행어사패는 존재하지 않습니다.\n\n"); printf("처음 시작시 100만원의 판돈이 주어지며, 보유자금을 다 잃을 경우, \n더이상 게임을 진행할 수 없게 됩니다.\n\n"); printf("배팅방식은 사용자 입력방식의 프리배팅 방식을 취하고 있습니다.\n\n"); printf("프로그램 이용 중 오류 문의는 DCEG연구실의 김철호 에게 문의 바랍니다.\n\n"); printf("계속 진행하시려면 ENTER를 눌러주세요.\n\n"); fflush(stdin); getchar();}
