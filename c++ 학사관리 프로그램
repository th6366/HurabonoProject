#include <iostream>#include <string.h>#include <stdlib.h>#include <time.h>using namespace std;struct result//성적데이터중첩구조체선언{ int korean;//국어 int english;//영어 int math;//수학 int science;//과학 int history;//국사};struct data//구조체를통한학생정보{ int id;//학번 char name[10];//이름 double mark;//평점 struct result re;//성적중첩구조체호출 char phone[15];//전화번호중첩구조체호출};void exda(struct data *fpd);//학생예제데이터함수선언int stda(struct data *fpd);//학생데이터입력함수선언int check(struct data *fpd);//학생데이터조회함수선언int stnoin(struct data *ffpd);//학번순정렬조회함수선언int nain(struct data *ffpd);//이름순정렬조회함수선언int makin(struct data *ffpd);//평점순정렬조회선언int stnose(struct data *ffpd);//학번대조조회함수선언int nase(struct data *ffpd);//이름대조조회함수int pnse(struct data *ffpd);//전화번호대조조회함수int lose(struct data *ffpd);//지역별조회함수void co(struct data *fffpd, int a, int b);int del(struct data *fpd);//데이터삭제함수int tran_number(int i);//메뉴숫자예외처리함수int end = 10;//조회값출력시데이터입력수int main(){ struct data d[100];//data 타입의d변수선언 int menu;//메뉴 exda(d); do {  while (1)//메뉴입력값예외처리  {   cout << "====================================\n\n";   cout << "         *학사정보시스템*\n\n";   cout << "====================================\n\n\n\n";   cout << "1.학생정보조회\n\n";   cout << "2.학생정보입력\n\n";   cout << "3.학생정보삭제\n\n";   cout << "4.프로그램종료\n\n\n";   cout << "*메뉴를선택하세요: ";   menu = tran_number(2);   if (menu>0 && menu<5)    break;   else    system("cls");  }  system("cls");  switch (menu)//메뉴  {  case 1://학생정보조회   check(d);   system("cls");   break;  case 2: //학생정보입력   stda(d);   system("cls");//학생데이터입력함수호출   break;  case 3: //학생정보삭제   del(d);   system("cls");   break;  case 4:// 프로그램종료   cout << "--------------------------";   cout << "\n\n프로그램을종료합니다.\n\n";   cout << "이용해주셔서감사합니다.\n\n\n";   cout << "--------------------------\n\n";   return 0;  default: //기타값입력시오류   cout << "잘못입력하셨습니다.\n";  } } while (1);}int stda(struct data *fpd)//학생데이터입력함수{ int i = end;//데이터입력횟수 int error; char garbage[5]; for (; i<99; i++) {  char wrong[5];//입력성공확인변수  char tran_wrong;  cout << "============================\n";  cout << "      *학생정보입력*     \n";  cout << "============================\n\n\n";  error = 0;//오류입력시함수탈출을위한조건변수  while (1)  {   cout << "저장하실학생의학번을입력하세요: ";   cin >> fpd[i].id;   fflush(stdin);   if (fpd[i].id<1987000000 || fpd[i].id>2008000000)   {    cout << "\n입력범위를초과하셨습니다(입력범위: 학번10자리)\n";    cout << "3회이상오류시입력이취소됩니다(" << error + 1 << "번째)\n\n";    fpd[i].id = 0;    error++;   }   else    break;   if (error == 3)   {    cout << "\n*3회이상입력오류로인해입력이취소되었습니다*";    cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*";    fgets(garbage, 5, stdin);    fflush(stdin);    return 0;   }  }  cout << "\n";  cout << "저장하실학생의이름을입력하세요: ";  cin >> fpd[i].name;  fflush(stdin);  cout << "\n";  cout << "저장하실학생의성적을입력하세요!\n\n";//각성적입력  error = 0;  while (1)  {   cout << "국어: ";   cin >> fpd[i].re.korean;   fflush(stdin);   if (fpd[i].re.korean<0 || fpd[i].re.korean>100)   {    cout << "\n입력범위를초과하셨습니다(입력범위: 0~100)\n\n";    cout << "3회이상오류시입력이취소됩니다(" << error + 1 << "번째)\n\n";    fpd[i].re.korean = 0;    error++;   }   else    break;   if (error == 3)   {    cout << "\n*3회이상입력오류로인해입력이취소되었습니다*";    cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*";    fgets(garbage, 5, stdin);    fflush(stdin);    return 0;   }  }  error = 0;  while (1)  {   cout << "영어: ";   cin >> fpd[i].re.english;   fflush(stdin);   if (fpd[i].re.english<0 || fpd[i].re.english>100)   {    cout << "\n입력범위를초과하셨습니다(입력범위: 0~100)\n\n";    cout << "3회이상오류시입력이취소됩니다(" << error + 1 << "번째)\n\n";    fpd[i].re.english = 0;    error++;   }   else    break;   if (error == 3)   {    cout << "\n*3회이상입력오류로인해입력이취소되었습니다*";    cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*";    fgets(garbage, 5, stdin);    fflush(stdin);    return 0;   }  }  error = 0;  while (1)  {   cout << "수학: ";   cin >> fpd[i].re.math;   fflush(stdin);   if (fpd[i].re.math<0 || fpd[i].re.math>100)   {    cout << "\n입력범위를초과하셨습니다(입력범위: 0~100)\n\n";    cout << "3회이상오류시입력이취소됩니다(" << error + 1 << "번째)\n\n";    fpd[i].re.math = 0;    error++;   }   else    break;   if (error == 3)   {    cout << "\n*3회이상입력오류로인해입력이취소되었습니다*";    cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*";    fgets(garbage, 5, stdin);    fflush(stdin);    return 0;   }  }  error = 0;  while (1)  {   cout << ("과학: ");   cin >> fpd[i].re.science;   fflush(stdin);   if (fpd[i].re.science<0 || fpd[i].re.science>100)   {    cout << "\n입력범위를초과하셨습니다(입력범위: 0~100)\n\n";    cout << "3회이상오류시입력이취소됩니다(" << error + 1 << "번째)\n\n";    fpd[i].re.science = 0;    error++;   }   else    break;   if (error == 3)   {    cout << "\n*3회이상입력오류로인해입력이취소되었습니다*";    cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*";    fgets(garbage, 5, stdin);    fflush(stdin);    return 0;   }  }  error = 0;  while (1)  {   cout << ("국사: ");   cin >> fpd[i].re.history;   fflush(stdin);   if (fpd[i].re.history<0 || fpd[i].re.history>100)   {    cout << "\n입력범위를초과하셨습니다(입력범위: 0~100)\n\n";    cout << "3회이상오류시입력이취소됩니다(" << error + 1 << "번째)\n\n";    fpd[i].re.history = 0;    error++;   }   else    break;   if (error == 3)   {    cout << "\n*3회이상입력오류로인해입력이취소되었습니다*";    cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*";    fgets(garbage, 5, stdin);    fflush(stdin);    return 0;   }  }  cout << ("\n");  error = 0;  while (1)  {   cout << "저장하실학생의전화번호을입력하세요! \n";//전화번호입력   cout << "(입력예제: 032-123-4567)\n\n";   cout << "전화번호: ";   cin >> fpd[i].phone;   fflush(stdin);   if (strlen(fpd[i].phone)<11 || strlen(fpd[i].phone)>13)   {    cout << "\n입력범위를초과하셨습니다(입력범위: 11~13자리전화번호)\n\n";    cout << "3회이상오류시입력이취소됩니다(" << error + 1 << "번째)\n\n";    error++;   }   else    break;   if (error == 3)   {    cout << "\n*3회이상입력오류로인해입력이취소되었습니다*";    cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*";    fgets(garbage, 5, stdin);    fflush(stdin);    return 0;   }  }  system("cls");  fpd[i].mark = (double)(fpd[i].re.korean + fpd[i].re.english + fpd[i].re.math + fpd[i].re.science + fpd[i].re.history) / 5;//입력성적의총점  while (1)//입력값확인및예외처리  {   cout << "============================\n";   cout << "        *입력결과*     \n";   cout << "============================\n\n\n";   cout << "학번: " << fpd[i].id << "\n\n";//입력확인사항출력   cout << "이름: " << fpd[i].name << "\n\n";   cout << "성적- \n\n";   cout << "국어: " << fpd[i].re.korean << "\n";   cout << "영어: " << fpd[i].re.english << "\n";   cout << "수학: " << fpd[i].re.math << "\n";   cout << "과학: " << fpd[i].re.science << "\n";   cout << "국사: " << fpd[i].re.history << "\n\n";   cout << "전화번호: " << fpd[i].phone << "\n\n";   cout << "평점: " << fpd[i].mark << "\n\n";   cout << "입력하신학생의데이터입니다.\n";   cout << "맞으시면(Y), 틀리시면(N) 를눌러주세요:";   fgets(wrong, 5, stdin);   fflush(stdin);   if (strlen(wrong)>2)   {    system("cls");    continue;   }   cout << ("\n");   if (wrong[0] == 'y')//입력성공시   {    end++;    return 0;   }   else if (wrong[0] == 'Y')   {    end++;    return 0;   }   else if (wrong[0] == 'n')//입력실패시   {    system("cls");    i--;    break;   }   else if (wrong[0] == 'N')   {    system("cls");    i--;    break;   }   else//기타값입력시예외처리    system("cls");  } }}int check(struct data *fpd)//학생데이터조회함수{ int i = 0;//반복변수 char quit = 0;//검색탈출변수 int way;//조건방법선택변수 int stip;//일반조회선택변수 int search;//검색조회선택변수 do {  cout << "============================\n";  cout << "      *학생정보조회*     \n";  cout << "============================\n\n\n";  cout << "1.일반조회\n\n";  cout << "2.검색조회\n\n";  cout << "3.전화면으로\n\n\n";  cout << "*메뉴를선택하세요: ";  way = tran_number(2);  switch (way)//조회방법조건분기  {  case 1://일반검색   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *일반조회*     \n";    cout << "============================\n\n\n";    cout << "1.학번순\n\n";    cout << "2.이름순\n\n";    cout << "3.평점순\n\n";    cout << "4.전화면으로\n\n\n";    cout << "*메뉴를선택하세요: ";    stip = tran_number(2);    if (stip == 1)     stnoin(fpd);//학번순조회함수호출    else if (stip == 2)     nain(fpd);//이름순조회함수호출    else if (stip == 3)     makin(fpd);//평점순조회함수호출    else if (stip == 4)    {     system("cls");     break;    }    else     system("cls");   }   break;  case 2:   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *검색조회*     \n";    cout << "============================\n\n\n";    cout << "1.학번검색\n\n";    cout << "2.이름검색\n\n";    cout << "3.전화번호검색\n\n";    cout << "4.지역별검색\n\n";    cout << "5.전화면으로\n\n\n";    cout << "*메뉴를선택하세요: ";    search = tran_number(2);    if (search == 1)     stnose(fpd);//학번대조조회함수호출    else if (search == 2)     nase(fpd);//이름대조조회함수호출    else if (search == 3)     pnse(fpd);//전화번호대조조회함수호출    else if (search == 4)     lose(fpd);//지역별대조조회함수호출    else if (search == 5)    {     system("cls");     break;    }    else     system("cls");   }   break;  case 3:   system("cls");   return 0;  default: //예외입력   system("cls");  } } while (1);}int stnoin(struct data *ffpd)//학번순정렬조회{ struct data cd[100];//데이터변수를복사할배열선언 int order;//차순조건 int i, j;//반복문 struct data temp;//swap시임시로값을저장할구조체변수 for (i = 0; i<100; i++)  cd[i] = ffpd[i]; while (1) {  system("cls");  cout << "*학번조회결과*\n\n";  cout << "---------------------------------------------------------------------------------------------\n";  cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";  cout << "---------------------------------------------------------------------------------------------\n";  for (i = 0; i<end; i++)   cout << cd[i].id << "      " << cd[i].name << "       " << cd[i].re.korean << "        " << cd[i].re.english << " " << cd[i].re.math << "    " << cd[i].re.science << " " << cd[i].re.history << "        " << cd[i].mark << "       " << cd[i].phone << "\n";  cout << "---------------------------------------------------------------------------------------------\n";  cout << "\n\n1.오름차순\n\n";  cout << "2.내림차순\n\n";  cout << "3.전화면으로\n\n";  order = tran_number(2);  switch (order)  {  case 1://오름차순   for (i = end - 1; i>0; i--)   {    for (j = 1; j <= i; j++)    {     if (cd[j - 1].id>cd[j].id)     {      temp = cd[j - 1];      cd[j - 1] = cd[j];      cd[j] = temp;     }    }   }   break;  case 2://내림차순   for (i = end - 1; i>0; i--)   {    for (j = 1; j <= i; j++)    {     if (cd[j].id>cd[j - 1].id)     {      temp = cd[j];      cd[j] = cd[j - 1];      cd[j - 1] = temp;     }    }   }   break;  case 3:   system("cls");   return 0;   break;  default:   cout << "\n잘못입력하셨습니다.\n\n";  } }}int nain(struct data *ffpd)//이름순정렬조회{ struct data cd[100];//데이터변수를복사할배열선언 int order;//차순조건 int i, j;//반복문 int result;//문자열비교값을넣을변수 struct data temp;//swap시임시로값을저장할구조체변수 for (i = 0; i<100; i++)  cd[i] = ffpd[i]; while (1) {  system("cls");  cout << "*이름조회결과*\n\n";  cout << "---------------------------------------------------------------------------------------------\n";  cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";  cout << "---------------------------------------------------------------------------------------------\n";  for (i = 0; i<end; i++)   cout << cd[i].id << "\t" << cd[i].name << "\t" << cd[i].re.korean << "\t" << cd[i].re.english << "\t" << cd[i].re.math << "\t" << cd[i].re.science << "\t" << cd[i].re.history << "\t" << cd[i].mark << "\t" << cd[i].phone << "\n";  cout << "---------------------------------------------------------------------------------------------\n";  cout << "\n\n1.오름차순\n\n";  cout << "2.내림차순\n\n";  cout << "3.전화면으로\n\n";  order = tran_number(2);  switch (order)  {  case 1://오름차순   for (i = end - 1; i>0; i--)   {    for (j = 1; j <= i; j++)    {     result = strcmp(cd[j - 1].name, cd[j].name);     if (result>0)     {      temp = cd[j - 1];      cd[j - 1] = cd[j];      cd[j] = temp;     }    }   }   break;  case 2://내림차순   for (i = end - 1; i>0; i--)   {    for (j = 1; j <= i; j++)    {     result = strcmp(cd[j - 1].name, cd[j].name);     if (result<0)     {      temp = cd[j];      cd[j] = cd[j - 1];      cd[j - 1] = temp;     }    }   }   break;  case 3:   system("cls");   return 0;   break;  default:   cout << ("\n잘못입력하셨습니다.\n\n");  } }}int makin(struct data *ffpd)//평점순정렬조회{ struct data cd[100];//데이터변수를복사할배열선언 int order;//차순조건 int i, j;//반복문 struct data temp;//swap시임시로값을저장할구조체변수 for (i = 0; i<100; i++)  cd[i] = ffpd[i]; while (1) {  system("cls");  cout << "*평점조회결과*\n\n";  cout << "---------------------------------------------------------------------------------------------\n";  cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";  cout << "---------------------------------------------------------------------------------------------\n";  for (i = 0; i<end; i++)   cout << cd[i].id << "\t" << cd[i].name << "\t" << cd[i].re.korean << "\t" << cd[i].re.english << "\t" << cd[i].re.math << "\t" << cd[i].re.science << "\t" << cd[i].re.history << "\t" << cd[i].mark << "\t" << cd[i].phone << "\n";  cout << "---------------------------------------------------------------------------------------------\n";  cout << "\n\n1.오름차순\n\n";  cout << "2.내림차순\n\n";  cout << "3.전화면으로\n\n";  order = tran_number(2);  switch (order)  {  case 1://오름차순   for (i = end - 1; i>0; i--)   {    for (j = 1; j <= i; j++)    {     if (cd[j - 1].mark>cd[j].mark)     {      temp = cd[j - 1];      cd[j - 1] = cd[j];      cd[j] = temp;     }    }   }   break;  case 2://내림차순   for (i = end - 1; i>0; i--)   {    for (j = 1; j <= i; j++)    {     if (cd[j].mark>cd[j - 1].mark)     {      temp = cd[j];      cd[j] = cd[j - 1];      cd[j - 1] = temp;     }    }   }   break;  case 3:   system("cls");   return 0;   break;  default:   cout << "\n잘못입력하셨습니다.\n\n";  } }}int stnose(struct data *ffpd)//학번대조조회함수{ struct data cd[100];//데이터변수를복사할배열선언 int i;//반복문 int stno;//입력받을학번변수 int no = 0;//조회된학생데이터순서 int se;//재검색여부변수 for (i = 0; i<100; i++)  cd[i] = ffpd[i]; while (1) {  system("cls");  cout << "============================\n";  cout << "      *학번검색*     \n";  cout << "============================\n\n\n";  cout << "검색학번: ";  cin >> stno;  fflush(stdin);  system("cls");  for (i = end - 1; i >= 0; i--)   if (cd[i].id == stno)   {    no = i;    break;   }  if (cd[no].id == stno)  {   cout << "*학번검색조회결과*\n\n";   cout << "---------------------------------------------------------------------------------------------\n";   cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";   cout << "---------------------------------------------------------------------------------------------\n";   cout << cd[i].id << "\t" << cd[i].name << "\t" << cd[i].re.korean << "\t" << cd[i].re.english << "\t" << cd[i].re.math << "\t" << cd[i].re.science << "\t" << cd[i].re.history << "\t" << cd[i].mark << "\t" << cd[i].phone << "\n";   cout << "---------------------------------------------------------------------------------------------\n";  }  else   cout << "*해당데이터가존재하지않습니다*\n";  while (1)  {   cout << "\n\n\n1.다른학생학번검색조회\n\n";   cout << "2.전화면으로\n\n\n";   cout << "*메뉴를선택하세요: ";   se = tran_number(2);   if (se == 1)    break;   else if (se == 2)   {    system("cls");    return 0;   }   else    system("cls");  } }}int nase(struct data *ffpd)//이름대조조회함수{ struct data cd[100];//데이터변수를복사할배열선언 int i;//반복문 char nano[10];//입력받을이름변수 int no;//조회된학생데이터순서 int se;//재검색여부변수 int result;//문자열비교값대입변수 for (i = 0; i<100; i++)  cd[i] = ffpd[i]; while (1) {  system("cls");  cout << "============================\n";  cout << "      *이름검색*     \n";  cout << "============================\n\n\n";  cout << "검색이름: ";  cin >> nano;  fflush(stdin);  system("cls");  for (i = end - 1; i >= 0; i--)  {   result = strcmp(cd[i].name, nano);   if (result == 0)   {    no = i;    break;   }  }  if (result == 0)  {   cout << "*이름검색조회결과*\n\n";   cout << "---------------------------------------------------------------------------------------------\n";   cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";   cout << "---------------------------------------------------------------------------------------------\n";   cout << cd[i].id << "\t" << cd[i].name << "\t" << cd[i].re.korean << "\t" << cd[i].re.english << "\t" << cd[i].re.math << "\t" << cd[i].re.science << "\t" << cd[i].re.history << "\t" << cd[i].mark << "\t" << cd[i].phone << "\n";   cout << "---------------------------------------------------------------------------------------------\n";  }  else   cout << "*해당데이터가존재하지않습니다*\n";  while (1)  {   cout << "\n\n\n1.다른학생이름검색조회\n\n";   cout << "2.전화면으로\n\n\n";   cout << "*메뉴를선택하세요: ";   se = tran_number(2);   if (se == 1)    break;   else if (se == 2)   {    system("cls");    return 0;   }   else    system("cls");  } }}int pnse(struct data *ffpd)//전화번호대조조회함수{ struct data cd[100];//데이터변수를복사할배열선언 int i;//반복문 char pnno[10];//입력받을학번변수 int no;//조회된학생데이터순서 int se;//재검색여부변수 int result;//문자열비교값대입변수 for (i = 0; i<100; i++)  cd[i] = ffpd[i]; while (1) {  system("cls");  cout << "============================\n";  cout << "      *전화번호검색*     \n";  cout << "============================\n\n\n";  cout << "(입력예제: 032-123-4567)\n";  cout << "검색전화번호: ";  cin >> pnno;  fflush(stdin);  system("cls");  for (i = end - 1; i >= 0; i--)  {   result = strcmp(cd[i].phone, pnno);   if (result == 0)   {    no = i;    break;   }  }  if (result == 0)  {   cout << "*전화번호검색조회결과*\n\n";   cout << "---------------------------------------------------------------------------------------------\n";   cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";   cout << "---------------------------------------------------------------------------------------------\n";   cout << cd[i].id << "\t" << cd[i].name << "\t" << cd[i].re.korean << "\t" << cd[i].re.english << "\t" << cd[i].re.math << "\t" << cd[i].re.science << "\t" << cd[i].re.history << "\t" << cd[i].mark << "\t" << cd[i].phone << "\n";   cout << "---------------------------------------------------------------------------------------------\n";  }  else   cout << "*해당데이터가존재하지않습니다*\n";  while (1)  {   se = 0;   cout << "\n\n\n1.다른학생이름검색조회\n\n";   cout << "2.전화면으로\n\n\n";   cout << "*메뉴를선택하세요: ";   cin >> se;   fflush(stdin);   if (se == 1)    break;   else if (se == 2)   {    system("cls");    return 0;   }   else    system("cls");  } }}int lose(struct data *ffpd)//지역별조회함수{ int local;//입력받은지역검색선택변수 int lono;//세부검색지역선택변수 while (1) {  system("cls");  cout << "============================================\n";  cout << "              *지역별검색*     \n";  cout << "============================================\n\n\n";  cout << "1.수도권(서울, 경기, 인천)\n\n";  cout << "2.강원권(강원)\n\n";  cout << "3.충청권(충남, 대전, 충북)\n\n";  cout << "4.경상권(부산, 울산, 대구, 경남, 경북)\n\n";  cout << "5.전라권(전남, 광주, 전북)\n\n";  cout << "6.제주권(제주)\n\n";  cout << "7. 전화면으로\n\n\n\n";  cout << "*메뉴를선택하세요: ";  local = tran_number(2);  switch (local)  {  case 1://수도권   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *수도권검색*     \n";    cout << "============================\n\n\n";    cout << "1.서울(02)\n\n";    cout << "2.경기(031)\n\n";    cout << "3.인천(032)\n\n\n\n";    cout << "*메뉴를선택하세요: ";    lono = tran_number(2);    if (lono == 1)    {     co(ffpd, 50, 45);//서울02     break;    }    else if (lono == 2)    {     co(ffpd, 51, 49);//경기031     break;    }    else if (lono == 3)    {     co(ffpd, 51, 50);//인천032     break;    }    else     system("cls");   }   system("cls");   break;  case 2: //강원권   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *강원권검색*     \n";    cout << "============================\n\n\n";    cout << "1.강원(033)\n\n\n\n";    cout << "*메뉴를선택하세요: ";    lono = tran_number(2);    if (lono == 1)    {     co(ffpd, 51, 51);//강원033     break;    }    else     system("cls");   }   system("cls");   break;  case 3://충청권   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *충청권검색*     \n";    cout << "============================\n\n\n";    cout << "1.충남(041)\n\n";    cout << "2.대전(042)\n\n";    cout << "3.충북(043)\n\n\n\n";    cout << "*메뉴를선택하세요: ";    lono = tran_number(2);    if (lono == 1)    {     co(ffpd, 52, 49);//충남041     break;    }    else if (lono == 2)    {     co(ffpd, 52, 50);//대전042     break;    }    else if (lono == 3)    {     co(ffpd, 52, 51);//충북043     break;    }    else     system("cls");   }   system("cls");   break;  case 4://경상권   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *경상권검색*     \n";    cout << "============================\n\n\n";    cout << "1.부산(051)\n\n";    cout << "2.울산(052)\n\n";    cout << "3.대구(053)\n\n";    cout << "4.경북(054)\n\n";    cout << "5.경남(055)\n\n\\n\n";    cout << "*메뉴를선택하세요: ";    lono = tran_number(2);    if (lono == 1)    {     co(ffpd, 53, 49);//부산051     break;    }    else if (lono == 2)    {     co(ffpd, 53, 50);//울산052     break;    }    else if (lono == 3)    {     co(ffpd, 53, 51);//대구053            break;    }    else if (lono == 4)    {     co(ffpd, 53, 52);//경북054        break;    }    else if (lono == 5)    {     co(ffpd, 53, 53);//경남055      break;    }    else     system("cls");   }   system("cls");   break;  case 5://전라권   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *전라권검색*     \n";    cout << "============================\n\n\n";    cout << "1.전남(061)\n\n";    cout << "2.광주(062)\n\n";    cout << "3.전북(063)\n\n\n\n";    cout << "*메뉴를선택하세요: ";    lono = tran_number(2);    if (lono == 1)    {     co(ffpd, 54, 49);//전남061     break;    }    else if (lono == 2)    {     co(ffpd, 54, 50);//광주062     break;    }    else if (lono == 3)    {     co(ffpd, 54, 51);//전북063     break;    }    else     system("cls");   }   system("cls");   break;  case 6:   while (1)   {    system("cls");    cout << "============================\n";    cout << "      *제주권검색*     \n";    cout << "============================\n\n\n";    cout << "1.제주(064)\n\n\n\n";    cout << "*메뉴를선택하세요: ";    lono = tran_number(2);    if (lono == 1)    {     co(ffpd, 54, 52);//제주064     break;    }    else     system("cls");   }   system("cls");   break;  case 7:   system("cls");   return 0;  default:   continue;  } }}void co(struct data *fffpd, int a, int b)//지역검색시결과출력함수{ struct data cd[100];//데이터변수를복사할배열선언 int i;//반복문 int j = 0;//결과값없을시메세지출력을위한변수 char se[5];//재검색여부변수 for (i = 0; i<100; i++)  cd[i] = fffpd[i]; system("cls"); cout << "*지역별검색조회결과*\n\n"; cout << "---------------------------------------------------------------------------------------------\n"; cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n"; cout << "---------------------------------------------------------------------------------------------\n"; for (i = end - 1; i >= 0; i--) {  if (cd[i].phone[1] == a && cd[i].phone[2] == b)  {   cout << cd[i].id << "\t" << cd[i].name << "\t" << cd[i].re.korean << "\t" << cd[i].re.english << "\t" << cd[i].re.math << "\t" << cd[i].re.science << "\t" << cd[i].re.history << "\t" << cd[i].mark << "\t" << cd[i].phone << "\n";   j++;  } } cout << "---------------------------------------------------------------------------------------------\n"; if (j == 0) {  system("cls");  cout << "*해당데이터가존재하지않습니다*\n"; } cout << "\n\n*전화면으로돌아가길원하시면ENTER 를눌러주세요*"; fgets(se, 5, stdin); fflush(stdin);}int del(struct data *fpd)//삭제메뉴{ int out = 0;//삭제할학생의학번의값을가질변수 int no = 0;//비교연산후해당변수가들어있는배열의자릿수를담을변수 char wrong[5];//삭제유무선택변수 int i;//반복변수 int se;//검색삭제조건선택 char nano[10];//입력받을이름변수 int result = 0;//문자열비교값대입변수 while (1) {  cout << "============================\n";  cout << "     *학생정보삭제*     \n";  cout << "============================\n\n\n";  cout << "1.학번으로검색후삭제\n\n";  cout << "2.이름으로검색후삭제\n\n";  cout << "3.전화면으로\n\n\n";  cout << "*메뉴를선택하세요: ";  se = tran_number(2);  switch (se)  {  case 1:   system("cls");   cout << "삭제하실학번입력해주세요: ";   cin >> out;   fflush(stdin);   for (i = end - 1; i >= 0; i--)   {    if (fpd[i].id == out)    {     no = i;     break;    }   }   if (fpd[no].id == out)   {    while (1)//입력값확인및예외처리    {     system("cls");     cout << "*검색조회결과*\n\n";     cout << "---------------------------------------------------------------------------------------------\n";     cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";     cout << "---------------------------------------------------------------------------------------------\n";     cout << fpd[i].id << "\t" << fpd[i].name << "\t" << fpd[i].re.korean << "\t" << fpd[i].re.english << "\t" << fpd[i].re.math << "\t" << fpd[i].re.science << "\t" << fpd[i].re.history << "\t" << fpd[i].mark << "\t" << fpd[i].phone << "\n";     cout << "---------------------------------------------------------------------------------------------\n";     cout << "\n\n\n삭제하길원하시는학생의데이터입니다.\n\n";     cout << "삭제를원하시면(Y), 취소를원하시면(N) 를눌러주세요:";     fgets(wrong, 5, stdin);     fflush(stdin);     if (strlen(wrong)>2)     {      system("cls");      continue;     }     cout << ("\n");     if (wrong[0] == 'y')//삭제성공시     {      for (i = no; i<end; i++, no++)       fpd[no] = fpd[no + 1];;//삭제명령시쓰레기값을가진구조체배열을지정한배열에삽입      end--;      return 0;     }     else if (wrong[0] == 'Y')     {      for (i = no; i<end; i++, no++)       fpd[no] = fpd[no + 1];      end--;      return 0;     }     else if (wrong[0] == 'n')//삭제취소시     {      system("cls");      break;     }     else if (wrong[0] == 'N')     {      system("cls");      break;     }     else//기타값입력시예외처리      system("cls");    }   }   else    cout << "*해당데이터가존재하지않습니다*\n";   fgetchar();   no = 0;   break;  case 2:   system("cls");   cout << "삭제하실이름입력해주세요: ";   cin >> nano;   fflush(stdin);   for (i = end - 1; i >= 0; i--)   {    result = strcmp(fpd[i].name, nano);    if (result == 0)    {     no = i;     break;    }   }   if (result == 0)   {    while (1)//입력값확인및예외처리    {     system("cls");     cout << "*검색조회결과*\n\n";     cout << "---------------------------------------------------------------------------------------------\n";     cout << "   학번\t이름\t국어\t영어\t수학\t과학\t국사\t평점\t\t전화번호\n";     cout << "---------------------------------------------------------------------------------------------\n";     cout << fpd[i].id << "\t" << fpd[i].name << "\t" << fpd[i].re.korean << "\t" << fpd[i].re.english << "\t" << fpd[i].re.math << "\t" << fpd[i].re.science << "\t" << fpd[i].re.history << "\t" << fpd[i].mark << "\t" << fpd[i].phone << "\n";     cout << "---------------------------------------------------------------------------------------------\n";     cout << "\n\n\n삭제하길원하시는학생의데이터입니다.\n\n";     cout << "삭제를원하시면(Y), 취소를원하시면(N) 를눌러주세요:";     fgets(wrong, 5, stdin);     fflush(stdin);     if (strlen(wrong)>2)     {      system("cls");      continue;     }     cout << ("\n");     if (wrong[0] == 'y')//삭제성공시     {      for (i = no; i<end; i++, no++)       fpd[no] = fpd[no + 1];//삭제명령시뒷배열을삭제한배열에삽입      end--;      return 0;     }     else if (wrong[0] == 'Y')     {      for (i = no; i<end; i++, no++)       fpd[no] = fpd[no + 1];      end--;      return 0;     }     else if (wrong[0] == 'n')//삭제취소시     {      system("cls");      break;     }     else if (wrong[0] == 'N')     {      system("cls");      break;     }     else//기타값입력시예외처리      system("cls");    }   }   else    cout << "*해당데이터가존재하지않습니다*\n";   fgetchar();   break;  case 3:   return 0;  default:   system("cls");  }  system("cls"); }}int tran_number(int i)//입력숫자예외처리함수{ int tran_number; char number[3]; fgets(number, sizeof(number), stdin); fflush(stdin); if (strlen(number)>i) {  system("cls");  return 0; } tran_number = atoi(number); return tran_number;}void exda(struct data *fpd)//학생예제데이터함수{ int i = 0; char exname0[10] = "윤아";//예제이름 char exname1[10] = "제시카"; char exname2[10] = "티파니"; char exname3[10] = "유리"; char exname4[10] = "수영"; char exname5[10] = "태연"; char exname6[10] = "효연"; char exname7[10] = "써니"; char exname8[10] = "서현"; char exname9[10] = "이수만"; char exnumber0[15] = "02-681-6440";//예제전화번호 char exnumber1[15] = "031-456-9993"; char exnumber2[15] = "032-272-3174"; char exnumber3[15] = "033-951-6855"; char exnumber4[15] = "041-723-1771"; char exnumber5[15] = "043-321-4886"; char exnumber6[15] = "054-854-8297"; char exnumber7[15] = "055-745-4943"; char exnumber8[15] = "061-675-3101"; char exnumber9[15] = "063-258-4832"; srand(time(NULL));//예제데이터를집어넣기위한난수발생 fpd[0].id = 2004214012; fpd[1].id = 2003214032; fpd[2].id = 2005214023; fpd[3].id = 2002214024; fpd[4].id = 2004214042; fpd[5].id = 2007214075; fpd[6].id = 2008214067; fpd[7].id = 2006214099; fpd[8].id = 2003214011; fpd[9].id = 2002214005; strcpy(fpd[0].name, exname0);//strcpy함수를이용해기존에초기화한배열의값을학생데이터이름배열에복사 strcpy(fpd[1].name, exname1); strcpy(fpd[2].name, exname2); strcpy(fpd[3].name, exname3); strcpy(fpd[4].name, exname4); strcpy(fpd[5].name, exname5); strcpy(fpd[6].name, exname6); strcpy(fpd[7].name, exname7); strcpy(fpd[8].name, exname8); strcpy(fpd[9].name, exname9); for (i = 0; i<10; i++)//예제성적입력 {  fpd[i].re.english = rand() % 91 + 9;//학생성적을랜덤하게입력  fpd[i].re.history = rand() % 91 + 9;  fpd[i].re.korean = rand() % 91 + 9;  fpd[i].re.math = rand() % 91 + 9;  fpd[i].re.science = rand() % 91 + 9; } strcpy(fpd[0].phone, exnumber0);//strcpy함수를이용해기존에초기화한배열의값을학생데이터이름배열에복사 strcpy(fpd[1].phone, exnumber1); strcpy(fpd[2].phone, exnumber2); strcpy(fpd[3].phone, exnumber3); strcpy(fpd[4].phone, exnumber4); strcpy(fpd[5].phone, exnumber5); strcpy(fpd[6].phone, exnumber6); strcpy(fpd[7].phone, exnumber7); strcpy(fpd[8].phone, exnumber8); strcpy(fpd[9].phone, exnumber9); for (i = 0; i<10; i++)  fpd[i].mark = (double)(fpd[i].re.korean + fpd[i].re.english + fpd[i].re.math + fpd[i].re.science + fpd[i].re.history) / 5;//예제데이터성적의총점}
