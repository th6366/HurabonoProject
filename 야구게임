프로그램 내용 : 
컴퓨터가 임의의 숫자를 3개를 정합니다.
단, 그 수는 양수이고 10보다 작아야 하며 중복되서는 안됩니다.
 
사용자는 컴퓨터가 정한 숫자를 맞춰야합니다.
단, 위치까지 맞춰야 합니다. 
 
컴퓨터는 3개의 숫자 입력을 지시하고
사용자가 3개의 숫자를 입력하면 컴퓨터는 그 수가 말한 위치와 값이 맞는지를 확인합니다.
값과 위치가 같으면 스트라이크, 그 수는 있으나 위치가 틀릴경우 볼을 출력합니다.
 
이 행위를 반복하여 스트라이크가 3개가 되면 종료됩니다.
 
구현방법:
1. 현재 시간을 이용해서 씨드를 설정합니다.
2. 3개의 임의의 변수를 만듭니다. 단 중복을 방지합니다.
3. 스트라이크가 3개가 될 때 까지 무한루프로 값을 맞추도록 합니다.
4. 3개의 값을 입력받습니다.
5. 입력 받을 시에도 중복을 방지합니다.
6. 스트라이크와 볼 함수를 실행시켜 스트라이크와 볼의 개수를 return 받습니다.
7. 현재 스트라이크와 볼의 갯수가 몇개인지 출력합니다.
8. 스트라이크가 3개가 되면 종료됩니다.
 
*/
 
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
 
int strike(int A[], int B[]); // 컴퓨터가 정한 배열과 사용자가 입력한 배열을 아규먼트로 받아 값과 위치가 같은 수의 갯수를 반환합니다.
int ball(int A[], int B[]); // 컴퓨터가 정한 배열과 사용자가 입력한 배열을 아규먼트로 받아 값은 있지만 위치가 다른 수의 갯수를 반환합니다.
 
int main()
{
    int str[3]; // 컴퓨터의 배열
    int input[3]; // 사용자가 입력할 배열
    int i;
    int n = 0;
    int s =0, b = 0 ;// 처음 스트라이크와 볼의 갯수는 0으로 초기화
     
    printf("Start Game!\n\n");
    do
    {
        srand((int)time(NULL)); // 현재 시간을 이용해서 씨드 설정
        for(i=0; i<3; i++)
            str[i] = rand()%10; // 임의의 값을 입력받음
    }while(str[0]==str[1] || str[1]==str[2] || str[0]==str[2]); // 중복된 숫자 입력 방지, 첫 숫자 0 방지
    while(s != 3) //스트라이크 3개가 되면 프로그램 종료
    {
        s = 0; // 다시 초기화 시킴
        b = 0;
        while(1) // 사용자로부터 값을 입력 받음
        {
            printf("3개의 숫자 선택: ");
            for(i=0; i<3; i++)
                scanf("%d", &input[i]);
            if(input[0]!=input[1] && input[1]!=input[2] && input[0]!=input[2]) // 정상적으로 입력받으면 루프 탈출
                break;
            else // 중복될 숫자가 있을 시 다시 입력
                printf("중복된 숫자가 있습니다. 다시 입력해주십시오 \n");
        }
        n++;
        s = strike(str, input); // 스트라이크함수를 불러서 스트라이크 갯수를 반환받음
        b = ball(str, input); // 볼 함수를 불러 볼 갯수를 반환받음
        printf("%d번째 도전 결과: %dstrike, %dball!!\n\n", n, s, b); // 결과 출력
    }
    printf("Game end!\n"); 
    return 0; // 프로그램 종료
}
 
//컴퓨터가 정한 숫자배열과 사용자가 입력한 숫자배열을 입력받아 둘의 값과 위치가 같은 것의 갯수를 반환하는 함수
int strike(int A[], int B[])
{
    int i;
    int s = 0;
    for(i=0; i<3; i++)
        if(A[i]==B[i]) // 위치와 값이 같으면 스트라이크 갯수 1 증가
            s++;
    return s;
}
 
//컴퓨터가 정한 숫자배열과 사용자가 입력한 숫자배열을 입력받아 둘의 위치가 다르지만 그 값이 존재하는 것의 갯수를 반환하는 함수
int ball(int A[], int B[])
{
    int i;
    int b = 0;
    for(i=0; i<3; i++)
    {
        if(A[i]==B[(i+1)%3]) // 위치가 다른 것이 같을 경우 볼 1 증가
            b++;
        if(A[i]==B[(i+2)%3])
            b++;
    }
    return b;
}
