#include <iostream>
#include <bitset>
 
int main()
{
  // 정수로 8비트 집합 구성
  std::bitset<8> bs1(131uL); // 10000011
 
  // 문자열로 8비트 집합 구성
  std::bitset<8> bs2("10000011");
 
  // 인덱스 1의 비트가 1인지 판정
  if (bs1[1]) {
    std::cout << "1st bit is 1" << std::endl;
  }
 
  // 2번째 비트를 1로
  bs1.set(2);
  std::cout << "2nd bit to 1 : " << bs1 << std::endl;
 
  // 2번째 비트를 다시 0으로
  bs1.reset(2);
 
  // 하나의 비트가 1인지 판정
  if (bs1.any()) {
    std::cout << "some bits are 1" << std::endl;
  }
 
  // 논리 연산
  std::bitset<8> and_bits = bs1 & std::bitset<8>("10000001");
  std::bitset<8> or_bits  = bs1 | std::bitset<8>("00010100");
  std::bitset<8> xor_bits = bs1 ^ std::bitset<8>("00100011");
 
  std::cout << "and : " << and_bits << std::endl;
  std::cout << "or  : " << or_bits << std::endl;
  std::cout << "xor : " << xor_bits << std::endl;
}
